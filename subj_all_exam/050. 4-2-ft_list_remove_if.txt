Assignment name  : ft_list_remove_if
Expected files   : ft_list_remove_if.c
Allowed functions: free
--------------------------------------------------------------------------------

Write a function called ft_list_remove_if that removes from the
passed list any element the data of which is "equal" to the reference data.

It will be declared as follows :

void ft_list_remove_if(t_list **begin_list, void *data_ref, int (*cmp)());

cmp takes two void* and returns 0 when both parameters are equal.

You have to use the ft_list.h file, which will contain:

$>cat ft_list.h
typedef struct      s_list
{
    struct s_list   *next;
    void            *data;
}                   t_list;
$>






#include <stdlib.h>

void ft_lst_clean(t_list *node)
{
	if (!node)
		return ;
	free(node);
	node = NULL;
}

void ft_list_remove_if(t_list **begin_list, void *data_ref, int (*cmp)())
{
	t_list		*previous;
	t_list		*current;
	t_list		*following;

	current = *begin_list;
	following = current->next;
	if ((*cmp)(current->data, data_ref) == 0)
	{
		ft_lst_clean(current);
		current = following;
		*begin_list = current;
		following = current->next;
	}
	while (current)
	{
		following = current->next;
		if ((*cmp)(current->data, data_ref) == 0)
		{
			previous->next = following;
			ft_lst_clean(current);
		}
		else
			previous = current;
		current = following;
	}
}
