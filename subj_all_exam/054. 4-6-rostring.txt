Assignment name  : rostring
Expected files   : rostring.c
Allowed functions: write, malloc, free
--------------------------------------------------------------------------------

Write a program that takes a string and displays this string after rotating it
one word to the left.

Thus, the first word becomes the last, and others stay in the same order.

A "word" is defined as a part of a string delimited either by spaces/tabs, or
by the start/end of the string.

Words will be separated by only one space in the output.

If there's less than one argument, the program displays \n.

Example:

$>./rostring "abc   " | cat -e
abc$
$>
$>./rostring "Que la      lumiere soit et la lumiere fut"
la lumiere soit et la lumiere fut Que
$>
$>./rostring "     AkjhZ zLKIJz , 23y"
zLKIJz , 23y AkjhZ
$>
$>./rostring | cat -e
$
$>

#include <stdlib.h>
#include <unistd.h>

int			ft_issp(char c)
{
	return (c == ' ' || c == '\f' || c == '\r' || c == '\n' \
		|| c == '\t' || c == '\v');
}

int			ft_strlen(char *s)
{
	char	*ps;

	ps = s;
	while (*ps)
	{
		ps++;
	}
	return (ps - s);
}

void		rostring(char *s)
{
	int		i;
	int		word;
	int		first;
	int		first_end;

	i = 0;
	word = -1;
	while (s[i])
	{
		if (!ft_issp(s[i]))
		{
			first = i;
			while (s[i] && !ft_issp(s[i]))
				i++;
			first_end = i;
			break ;
		}
		i++;
	}
	while (s[i])
	{
		if (!ft_issp(s[i]))
		{
			if (word != -1)
				write(1, " ", 1);
			word = i;
			while (s[i] && !ft_issp(s[i]))
				i++;
			write(1, &s[word], i - word);
			continue ;
		}
		i++;
	}
	if (word != -1)
		write(1, " ", 1);
	write(1, &s[first], first_end - first);
}

int			main(int ac, char **av)
{
	if (ac > 1)
	{
		rostring(av[1]);
	}
	write(1, "\n", 1);
	return (0);
}
